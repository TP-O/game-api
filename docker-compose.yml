version: "3.8"

services:
    api:
        build:
            context: ./.docker
        image: werewolf-api:dev-latest
        volumes:
            - ./:/var/www/html
        networks:
            - webserver-network
            - postgres-network
            - redis-network
        depends_on:
            - postgres
            # - redis
        restart: unless-stopped

    webserver:
        image: nginx:1.21.3-alpine
        working_dir: /var/www/html
        volumes:
            - ./public:/var/www/html/public
            # - ./.docker/nginx/log:/var/log/nginx
            - ./.docker/nginx/ssl:/etc/nginx/ssl
            - ./.docker/nginx/conf:/etc/nginx/conf.d
            - ./.docker/nginx/entrypoint.sh:/docker-entrypoint.d/entrypoint.sh
        ports:
            - 8080:80
            - 443:443
        networks:
            - webserver-network
        depends_on:
            - api
        restart: unless-stopped

    postgres:
        image: postgres:14.1-alpine3.15
        environment:
            - POSTGRES_DB=${DB_DATABASE}
            - POSTGRES_USER=${DB_USERNAME}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
        volumes:
            - ./.docker/postgres/data:/var/lib/postgresql/data
        networks:
            - postgres-network
        restart: unless-stopped

    adminer:
        image: dockette/adminer:pgsql
        ports:
        - 8081:80
        networks:
            - postgres-network
        depends_on:
            - postgres
        restart: unless-stopped

    # redis:
    #     image: redis:6.2.5-alpine3.14
    #     environment:
    #         - REDIS_PASSWORD=${REDIS_PASSWORD}
    #     volumes:
    #       - ./.docker/redis/data:/data
    #     command: redis-server --requirepass ${REDIS_PASSWORD}
    #     networks:
    #         - redis-network
    #     restart: unless-stopped

    # rediscommander:
    #     image: rediscommander/redis-commander:latest
    #     environment:
    #         REDIS_HOST: ${REDIS_HOST}
    #         REDIS_PORT: ${REDIS_PORT}
    #         REDIS_PASSWORD: ${REDIS_PASSWORD}
    #     ports:
    #         - 8082:8081
    #     networks:
    #         - redis-network
    #     depends_on:
    #         - redis
    #     restart: unless-stopped

networks:
    webserver-network:
    postgres-network:
    redis-network:
